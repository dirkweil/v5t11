# Ports
quarkus.http.port=31180
%test.quarkus.http.port=31181

# Datasource
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://${v5t11.db.host}:${v5t11.db.port}/v5t11
%prod.quarkus.datasource.username=v5t11
%prod.quarkus.datasource.password=v5t11_123
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://${v5t11.db.host}:${v5t11.db.port}/v5t11
%dev.quarkus.datasource.username=v5t11
%dev.quarkus.datasource.password=v5t11_123

quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.fetch.batch-size=64
quarkus.hibernate-orm.batch-fetch-size=64

quarkus.hibernate-orm.metrics.enabled=true

# Transactions
quarkus.transaction-manager.default-transaction-timeout=300

# Beans not injected normally, but programatically
quarkus.arc.unremovable-types=\
  de.gedoplan.v5t11.util.transaction.TransactionChecker,\
  de.gedoplan.v5t11.fahrstrassen.persistence.**

# Logging (see defaults in v5t11-util)
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.ParcoursProducer".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.StatusUpdater".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.entity".level=DEBUG
quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.messaging".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.FahrstrasseMonitor".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.FahrstrasseStellenService".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.FahrstrasseRueckstellenService".level=DEBUG
quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.JoinService".level=DEBUG
#quarkus.log.category."de.gedoplan.v5t11.fahrstrassen.service.VorsignalService".level=TRACE

%test.quarkus.log.category."de.gedoplan.v5t11.fahrstrassen".level=DEBUG

#quarkus.log.category."org.hibernate.SQL".level=DEBUG

quarkus.log.category."org.jboss.resteasy".level=INFO
#quarkus.log.category."io.quarkus.arc.processor".level=DEBUG
#quarkus.log.category."io.smallrye".level=DEBUG

# Rest Client
v5t11.status/mp-rest/scope=javax.enterprise.context.ApplicationScoped

# Messaging
%prod.kafka.bootstrap.servers=${v5t11.kafka.host}:${v5t11.kafka.port}
#%dev.kafka.bootstrap.servers=${v5t11.kafka.host}:${v5t11.kafka.port}

mp.messaging.outgoing.fahrstrasse.connector=smallrye-kafka
mp.messaging.outgoing.fahrstrasse.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.status.connector=smallrye-kafka
mp.messaging.incoming.status.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

